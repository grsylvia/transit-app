# installing libraries
pip install protobuf requests

## test of fetch and parse for vehicle positions
import requests
import gtfs_realtime_pb2  # Ensure you have the Protobuf file compiled

# MBTA GTFS Realtime URL and API key
url = "https://api-v3.mbta.com/vehicles"  # Example feed URL
headers = {"x-api-key": "your_api_key_here"}  # Replace with your MBTA API key

# Step 1: Fetch the GTFS Realtime feed
response = requests.get(url, headers=headers)

# Check if request is successful
if response.status_code == 200:
    # Step 2: Parse GTFS Realtime Protobuf data
    feed = gtfs_realtime_pb2.FeedMessage()
    feed.ParseFromString(response.content)
    
    # Step 3: Access data
    for entity in feed.entity:
        if entity.HasField("vehicle"):  # Check if the entity has a vehicle field
            vehicle = entity.vehicle
            print(f"Vehicle ID: {vehicle.vehicle.id}")
            print(f"Current Position: {vehicle.position.latitude}, {vehicle.position.longitude}")
            print(f"Current Status: {vehicle.current_status}")
else:
    print(f"Error fetching data: {response.status_code}")

## MBTA-Specific API with JSON
import requests

# MBTA Vehicles API URL and API key
url = "https://api-v3.mbta.com/vehicles"
headers = {"x-api-key": "your_api_key_here"}  # Replace with your API key

# Step 1: Fetch JSON feed
response = requests.get(url, headers=headers)

if response.status_code == 200:
    data = response.json()
    # Step 2: Parse the JSON data
    for vehicle in data["data"]:
        vehicle_id = vehicle["id"]
        latitude = vehicle["attributes"]["latitude"]
        longitude = vehicle["attributes"]["longitude"]
        status = vehicle["attributes"]["current_status"]
        print(f"Vehicle ID: {vehicle_id}")
        print(f"Position: {latitude}, {longitude}")
        print(f"Status: {status}")
else:
    print(f"Error: {response.status_code}")

## GTFS Realtime Endpoints
# Vehicle Positions: https://api-v3.mbta.com/vehicles
# Trip Updates: https://api-v3.mbta.com/trips
# Alerts: https://api-v3.mbta.com/alerts
params = {"filter[route]": "Red"}  # For filtering Red Line vehicles
response = requests.get(url, headers=headers, params=params)

## Debug
print(response.json())   # For JSON
